<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

  <mapper namespace="com.iu.mk.pay.PayDAO">
  
	   <resultMap type="CartVO" id="payResult">
	   
	 		<id column="cq_num" property="cq_num"/>
			<result column="p_num" property="p_num"/>
			<result column="count" property="count"/>
			<result column="cart_num" property="cart_num"/>
			<result column="payCheck" property="payCheck"/>
			
			<collection property="productVOs" javaType="List" ofType="ProductVO">
				<id column="p_num" property="p_num"/>
		  		<result column="p_name" property="p_name"/>
		  		<result column="price" property="price"/>
		  		<result column="contents" property="contents"/>
		  		<result column="kind" property="kind"/>
			</collection>
			
	 </resultMap> 
	 
	 <!-- soyeon -->


	 <!-- innerjoin(crossjoin)한 리스트 / 기존 vo + 새로추가할 데이터를 적으면 된다.-->
	   <resultMap type="PayInfoVO" id="sy_paylistResult">
	   
	 		<id column="order_num" property="order_num"/><!-- 기본키 -->
			<result column="total_price" property="total_price"/><!-- VO에 원래있던애들 -->
			<result column="delivery" property="delivery"/>
			<result column="payDate" property="payDate"/>
			 <result column="count" property="count"/> 
			
			
			<!-- 새로 조인해줄 테이블1 / 주로, 한 구역에 이미지가 2개이상, 주문번호2개이상과 같이 여러개 들어갈때사용-->
			<collection property="productVOs" javaType="List" ofType="ProductVO">
				<id column="p_num" property="p_num"/>
		  		<result column="p_name" property="p_name"/>
		  		<result column="price" property="price"/>
		  		<result column="contents" property="contents"/>
		  		<result column="kind" property="kind"/>
			</collection>
			
			<!-- 새로 조인해줄 테이블2 -->
			<collection property="productFileVOs" javaType="List" ofType="ProductFileVO">
				<id column="fileName" property="fileName"/>
		  		<result column="kind" property="kind"/>
		  		<result column="oriName" property="oriName"/>
		  		<result column="p_num" property="p_num"/>
		  		<result column="fileNum" property="fileNum"/>
			</collection>
			
			
	 </resultMap> 
	 
	 <resultMap type="PayInfoVO" id="sy_payselectResult">
	 		<id column="order_num" property="order_num"/><!-- 기본키 -->
			<result column="total_price" property="total_price"/><!-- VO에 원래있던애들 -->
			<result column="delivery" property="delivery"/>
			<result column="payDate" property="payDate"/>
			<result column="count" property="count"/> 
			<result column="pay_price" property="pay_price"/> 
	 
	 		<!-- 새로 조인해줄 테이블1 / 주로, 한 구역에 이미지가 2개이상, 주문번호2개이상과 같이 여러개 들어갈때사용-->
			<collection property="productVOs" javaType="List" ofType="ProductVO">
				<id column="p_num" property="p_num"/>
		  		<result column="p_name" property="p_name"/>
		  		<result column="price" property="price"/>
		  		<result column="contents" property="contents"/>
		  		<result column="kind" property="kind"/>
			</collection>
			
			<!-- 새로 조인해줄 테이블2 -->
			<collection property="productFileVOs" javaType="List" ofType="ProductFileVO">
				<id column="fileName" property="fileName"/>
		  		<result column="kind" property="kind"/>
		  		<result column="oriName" property="oriName"/>
		  		<result column="p_num" property="p_num"/>
		  		<result column="fileNum" property="fileNum"/>
			</collection>
			
	 </resultMap>
	 
	 
  	<resultMap type="CartVO" id="payFinal">
	   
	 		<id column="cq_num" property="cq_num"/>
			<result column="p_num" property="p_num"/>
			<result column="count" property="count"/>
			<result column="cart_num" property="cart_num"/>
			<result column="payCheck" property="payCheck"/>
			
			<collection property="productVOs" javaType="List" ofType="ProductVO">
				<id column="p_num" property="p_num"/>
		  		<result column="p_name" property="p_name"/>
		  		<result column="price" property="price"/>
		  		<result column="contents" property="contents"/>
		  		<result column="kind" property="kind"/>
			</collection>
			
			<collection property="productFileVOs" javaType="List" ofType="ProductFileVO">
				<id column="fileNum" property="fileNum"/>
		  		<result column="p_num" property="p_num"/>
		  		<result column="oriName" property="oriName"/> 
		  		<result column="fileName" property="fileName"/> 
		  		<result column="kind" property="kind"/> 
			</collection>
			
			<collection property="payVOs" javaType="List" ofType="PayVO">
				<id column="pq_num" property="pq_num"/>
				<result column="cq_num" property="cq_num"/>
				<result column="pay_price" property="pay_price"/>
				<result column="order_num" property="order_num"/>
			</collection>
	
	  </resultMap>
	 
  

  
  	<select id="scCart" parameterType="Long" resultMap="payResult">
  		 select C.cq_num, P.price from cart C left Join product p
		 on (C.p_num = P.p_num)
		 where cart_num=#{cart_num} and payCheck=0
  	</select>
  
  
  	<insert id="payInsert" parameterType="com.iu.mk.pay.PayVO">
  		insert into pay values (pq_num_seq.nextval, #{cq_num}, #{pay_price}, #{order_num})
  	</insert>
  
  	<select id="orderNum" resultType="Long">
		select pq_num_seq.nextval from dual
	</select>
	

	
	
	<select id="scPrice" parameterType="Long" resultType="Long">

		select price from product where p_num in (select p_num from cart where cq_num in (select cq_num from pay where order_num=#{order_num}));
	</select>
  
  
  	<insert id="payInfoInsert" parameterType="com.iu.mk.pay.PayInfoVO">
  		insert into payInfo values (#{order_num}, #{total_price}, #{delivery}, sysdate)
  	</insert>
  
  
    <update id="payCheckUpdate">
  		update cart set payCheck = 1 where cq_num in (select cq_num from pay where order_num=#{order_num})
  	</update>
  
  	<select id="pCount" parameterType="Long" resultType="Long">
  		select count from cart where cq_num=#{cq_num}
  	</select>
  	
  	
  	<select id="totalPrice" parameterType="Long" resultType="com.iu.mk.pay.PayInfoVO">
  		select total_price, delivery from payInfo where order_num =#{order_num}
  	</select>
  	
  	
  	

   <select id="finalCart" parameterType="Long" resultMap="payFinal">
  		select OO.p_num, OO.fileName, OO.oriName, PO.count, PO.pay_price ,PO.cart_num, OO.p_name from


		(select FP.* from
			(SELECT PP.* ,PF.fileNum , PF.oriName, PF.fileName from
			(select * from
			    (select P.*, rownum R from
			        (select * from product where
			             p_num>=10001 order by p_num desc) P)
			    where R between 1 and 24 ) PP
			left join productFile PF
			on(PP.p_num=PF.p_num)
			order by PP.p_num desc ) FP ) 
			OO 

		inner join 

		(select FC.* from
		(select * from
			(select CA.*, rownum R from
				(select * from cart where p_num>=10001 order by p_num desc) CA) CAA
			left join pay  PPA
			on(CAA.cq_num=PPA.cq_num) ) FC) PO
		
	
		on (OO.p_num=PO.p_num)
		where cart_num=#{cart_num} and order_num =#{order_num}
  	</select> 
  	
  	
  	<!-- soyeon : 주문번호로 원하는 정보 가져오기 -->
  	<select id="payList" parameterType="Long" resultMap="sy_paylistResult"><!-- 위에 참고! / 되돌려주는값은 테이블이 조인테이블일경우:resultMap을 쓴다. -->
  		select C3.*, CO.* from

		(select C1.*, C2.order_num, (C2.total_price+C2.delivery) total_price, C2.payDate from
		(SELECT P.p_num, P.p_name, PF.fileName 
		FROM product P INNER JOIN productFile PF 
		ON (P.p_num = PF.p_num)
		WHERE P.p_name=(select p_name from product
		where p_num=any(select p_num from cart
		where cq_num=any(select cq_num from pay 
		where order_num=(select order_num from payInfo where order_num=#{m}))) and rownum=1)) C1
		cross join
		payInfo C2
		where C2.order_num=#{m}) C3
		
		cross join
		
		(select count(p_num)-1 count from cart
		where cq_num=any(select cq_num from pay 
		where order_num=(select order_num from payInfo where order_num=#{m}))) CO
  	</select>
  	
  <!-- soyeon : 아이디로 주문번호 가져오기 / List<Long>타입 - DAO에서 selectList로 받아오기 때문에 result는 Long타입만 쓰면 된다.-->
  <select id="orderNum2" parameterType="java.util.Map" resultType="Long">
  	select order_num from
  	(select N.* , rownum R from
  	(select distinct order_num from pay where cq_num=any(
	select cq_num from cart 
	where cart_num=(select cart_num from member 
	where id=#{id})) order by order_num desc) N)
	where R between #{pager.startRow} and #{pager.lastRow}
  
  </select>
  
  
  <!--  전체 글의 갯수 가져오기   --> 	
  	<select id="payCount" parameterType="String" resultType="Long">
  		select count(DISTINCT
        order_num) from pay
  		where cq_num in (select cq_num from cart
		where cart_num=(select cart_num from member where id=#{id}) and paycheck=1)
 	</select>

  <!-- Select1 -->
  <select id="paySelect" parameterType="Long" resultMap="sy_payselectResult">
		SELECT PF.filename, PCR.p_name, PCR.p_num, PCR.price, PCR.count, PCR.pay_price, PCR.cq_num
		FROM productfile PF INNER JOIN
		(SELECT PC.pay_price, PC.cq_num, PC.count, PC.p_num, PR.p_name, PR.price
		FROM product PR INNER JOIN
		(SELECT P.pay_price, P.cq_num, C.count, C.p_num 
		FROM cart C INNER JOIN pay P 
		ON (C.cq_num = P.cq_num)
		where order_num=#{order_num}) PC
		ON (PC.p_num = PR.p_num)) PCR
		ON (PF.p_num = PCR.p_num)
  </select>
  
  
  <!-- Select2 -->
  
  <select id="paySelect2" parameterType="Long" resultType="com.iu.mk.pay.PayInfoVO">
  	select total_price, delivery from payinfo
	where order_num=#{order_num}
  </select>
  
  
  </mapper>