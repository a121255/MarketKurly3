<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

  <mapper namespace="com.iu.mk.pay.PayDAO">
  
	   <resultMap type="CartVO" id="payResult">
	   
	 		<id column="cq_num" property="cq_num"/>
			<result column="p_num" property="p_num"/>
			<result column="count" property="count"/>
			<result column="cart_num" property="cart_num"/>
			<result column="payCheck" property="payCheck"/>
			
			<collection property="productVOs" javaType="List" ofType="ProductVO">
				<id column="p_num" property="p_num"/>
		  		<result column="p_name" property="p_name"/>
		  		<result column="price" property="price"/>
		  		<result column="contents" property="contents"/>
		  		<result column="kind" property="kind"/>
			</collection>
			
	 </resultMap> 
	 
	 <!-- soyeon -->
	 <!-- innerjoin(crossjoin)한 리스트 -->
	   <resultMap type="PayInfoVO" id="sy_paylistResult">
	   
	 		<id column="order_num" property="order_num"/><!-- 기본키 -->
			<result column="total_price" property="total_price"/><!-- VO에 원래있던애들 -->
			<result column="delivery" property="delivery"/>
			<result column="payDate" property="payDate"/>
			
			<!-- 새로 조인해줄 테이블1 -->
			<collection property="productVOs" javaType="List" ofType="ProductVO">
				<id column="p_num" property="p_num"/>
		  		<result column="p_name" property="p_name"/>
		  		<result column="price" property="price"/>
		  		<result column="contents" property="contents"/>
		  		<result column="kind" property="kind"/>
			</collection>
			
			<!-- 새로 조인해줄 테이블2 -->
			<collection property="productFileVOs" javaType="List" ofType="ProductVO">
				<id column="fileName" property="fileName"/>
		  		<result column="kind" property="kind"/>
		  		<result column="oriName" property="oriName"/>
		  		<result column="p_num" property="p_num"/>
		  		<result column="fileNum" property="fileNum"/>
			</collection>
			
			
			
			
			
			
	 </resultMap> 
	 
<!-- 	  <resultMap type="CartVO" id="payFinal">
	   
	 		<id column="cq_num" property="cq_num"/>
			<result column="p_num" property="p_num"/>
			<result column="count" property="count"/>
			<result column="cart_num" property="cart_num"/>
			<result column="payCheck" property="payCheck"/>
			
			<collection property="productVOs" javaType="List" ofType="ProductVO">
				<id column="p_num" property="p_num"/>
		  		<result column="p_name" property="p_name"/>
		  		<result column="price" property="price"/>
		  		<result column="contents" property="contents"/>
		  		<result column="kind" property="kind"/>
			</collection>
			
			<collection property="productFileVOs" javaType="List" ofType="ProductFileVO">
				<id column="fileNum" property="fileNum"/>
		  		<result column="p_num" property="p_num"/>
		  		<result column="oriName" property="oriName"/> 
		  		<result column="fileName" property="fileName"/> 
		  		<result column="kind" property="kind"/> 
			</collection>
			
			<collection property="PayVO" javaType="List" ofType="PayVO">
				<id column="pq_num" property="pq_num"/>
				<result column="cq_num" property="cq_num"/>
				<result column="pay_price" property="pay_price"/>
				<result column="order_num" property="order_num"/>
			</collection>
	
	  -->
	 
  

  
  	<select id="scCart" parameterType="Long" resultMap="payResult">
  		 select C.cq_num, P.price from cart C left Join product p
		 on (C.p_num = P.p_num)
		 where cart_num=#{cart_num} and payCheck=0
  	</select>
  
  
  	<insert id="payInsert" parameterType="com.iu.mk.pay.PayVO">
  		insert into pay values (pq_num_seq.nextval, #{cq_num}, #{pay_price}, #{order_num})
  	</insert>
  
  	<select id="orderNum" resultType="Long">
		select pq_num_seq.nextval from dual
	</select>
	
	
	<select id="scPrice" parameterType="Long" resultType="List">
		select price from product where p_num in (select p_num from cart where cq_num in (select cq_num from pay where order_num=#{order_num}));
	</select>
  
  
  	<insert id="payInfoInsert" parameterType="com.iu.mk.pay.PayInfoVO">
  		insert into payInfo values (#{order_num}, #{total_price}, #{delivery}, sysdate)
  	</insert>
  
  
    <update id="payCheckUpdate">
  		update cart set payCheck = 1 where cq_num in (select cq_num from pay where order_num=#{order_num})
  	</update>
  
  	<select id="pCount" parameterType="Long" resultType="Long">
  		select count from cart where cq_num=#{cq_num}
  	</select>
  	
  	
<!--   	<select id="payFinal" parameterType="Long" resultMap="payFinal">
  		select OO.p_num, OO.fileName, OO.oriName, PO.count, PO.pay_price  from

		(select FP.* from
			(SELECT PP.* ,PF.fileNum , PF.oriName, PF.fileName from
			(select * from
			    (select P.*, rownum R from
			        (select * from product where
			             p_num>=10001 order by p_num desc) P)
			    where R between 1 and 24 ) PP
			left join productFile PF
			on(PP.p_num=PF.p_num)
			order by PP.p_num desc ) FP ) 
			OO 

		inner join 

		(select FC.* from
		(select * from
			(select CA.*, rownum R from
				(select * from cart where p_num>=10001 order by p_num desc) CA) CAA
			left join pay  PPA
			on(CAA.cq_num=PPA.cq_num) ) FC) PO
		
	
		on (OO.p_num=PO.p_num)
  	</select> -->
  	
  	
  	<!-- soyeon -->
  	<select id="payList" parameterType="Pager" resultMap="sy_paylistResult"><!-- 위에 참고! / 되돌려주는값은 테이블이 조인테이블일경우:resultMap을 쓴다. -->
  		select C3.*, CO.* from

		(select C1.*, C2.* from
		(SELECT P.p_num, P.p_name, PF.filename 
		FROM product P INNER JOIN productfile PF 
		ON (P.p_num = PF.p_num)
		WHERE P.p_name=(select p_name from product
		where p_num=any(select p_num from cart
		where cq_num=any(select cq_num from pay 
		where order_num=(select order_num from payinfo where order_num=#{order_num}))) and rownum=1)) C1
		cross join
		payinfo C2
		where C2.order_num=#{order_num}) C3
		
		cross join
		
		(select count(p_num) count from cart
		where cq_num=any(select cq_num from pay 
		where order_num=(select order_num from payinfo where order_num=#{order_num}))) CO;
  	</select>
  	
  
  </mapper>